// This is a copy of test vectors from the mongodb/mongo repository.
{
    .lowerBound = 0.000000,
    .includeLowerBound = true,
    .upperBound = 1.638400,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(0.000000),
    .max = OPT_DOUBLE_C(6.500000),
    .precision = OPT_U32_C(1),
    .expectMincoverString = "000\n" \
        "0010000\n" 
},
{
    .lowerBound = 0.000000,
    .includeLowerBound = true,
    .upperBound = 1.638400,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(0.000000),
    .max = OPT_DOUBLE_C(6.550000),
    .precision = OPT_U32_C(2),
    .expectMincoverString = "000\n" \
        "00100\n" \
        "00101000\n" 
},
{
    .lowerBound = 0.000000,
    .includeLowerBound = true,
    .upperBound = 1.638400,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(0.000000),
    .max = OPT_DOUBLE_C(6.553000),
    .precision = OPT_U32_C(3),
    .expectMincoverString = "000\n" \
        "0010\n" \
        "0011000\n" \
        "00110010\n" \
        "00110011000\n" \
        "001100110010\n" \
        "0011001100110\n" 
},
{
    .lowerBound = 0.000000,
    .includeLowerBound = true,
    .upperBound = 1.638400,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(0.000000),
    .max = OPT_DOUBLE_C(6.553600),
    .precision = OPT_U32_C(4),
    .expectMincoverString = "000\n" \
        "00100000000000000\n" 
},
{
    .lowerBound = 10000.000000,
    .includeLowerBound = true,
    .upperBound = 20000.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(383.000000),
    .max = OPT_DOUBLE_C(18446744073709552000.000000),
    .precision = OPT_U32_C(0),
    .expectMincoverString = "110000001100001110001\n" \
        "11000000110000111001\n" \
        "1100000011000011101\n" \
        "110000001100001111\n" \
        "11000000110001\n" \
        "1100000011001\n" \
        "110000001101000\n" \
        "1100000011010010\n" \
        "11000000110100110\n" \
        "110000001101001110000\n" \
        "1100000011010011100010000000000000000000000000000000000000000000\n" 
},
{
    .lowerBound = 10000.000000,
    .includeLowerBound = true,
    .upperBound = 20000.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(384.000000),
    .max = OPT_DOUBLE_C(18446744073709552000.000000),
    .precision = OPT_U32_C(0),
    .expectMincoverString = "110000001100001110001\n" \
        "11000000110000111001\n" \
        "1100000011000011101\n" \
        "110000001100001111\n" \
        "11000000110001\n" \
        "1100000011001\n" \
        "110000001101000\n" \
        "1100000011010010\n" \
        "11000000110100110\n" \
        "110000001101001110000\n" \
        "1100000011010011100010000000000000000000000000000000000000000000\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.000000),
    .max = OPT_DOUBLE_C(314.000000),
    .precision = OPT_U32_C(0),
    .expectMincoverString = "000001011\n" \
        "0000011\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "0100\n" \
        "01010\n" \
        "010110\n" \
        "0101110\n" \
        "01011110\n" \
        "010111110\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.700000),
    .max = OPT_DOUBLE_C(314.100000),
    .precision = OPT_U32_C(1),
    .expectMincoverString = "000001100111\n" \
        "000001101\n" \
        "00000111\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "010\n" \
        "0110\n" \
        "011100\n" \
        "0111010\n" \
        "0111011000\n" \
        "01110110010\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.710000),
    .max = OPT_DOUBLE_C(314.150000),
    .precision = OPT_U32_C(2),
    .expectMincoverString = "000010000000101\n" \
        "00001000000011\n" \
        "000010000001\n" \
        "00001000001\n" \
        "0000100001\n" \
        "000010001\n" \
        "00001001\n" \
        "0000101\n" \
        "000011\n" \
        "0001\n" \
        "001\n" \
        "01\n" \
        "1000\n" \
        "1001000\n" \
        "10010010\n" \
        "100100110\n" \
        "1001001110\n" \
        "10010011110\n" \
        "10010011111000\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.718000),
    .max = OPT_DOUBLE_C(314.159000),
    .precision = OPT_U32_C(3),
    .expectMincoverString = "000001010000010101\n" \
        "00000101000001011\n" \
        "000001010000011\n" \
        "0000010100001\n" \
        "000001010001\n" \
        "00000101001\n" \
        "0000010101\n" \
        "000001011\n" \
        "0000011\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "0100\n" \
        "01010\n" \
        "010110\n" \
        "0101110000\n" \
        "01011100010\n" \
        "0101110001100\n" \
        "01011100011010\n" \
        "010111000110110000\n" \
        "0101110001101100010\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.718200),
    .max = OPT_DOUBLE_C(314.159200),
    .precision = OPT_U32_C(4),
    .expectMincoverString = "000001100100011010001\n" \
        "00000110010001101001\n" \
        "0000011001000110101\n" \
        "000001100100011011\n" \
        "0000011001000111\n" \
        "0000011001001\n" \
        "000001100101\n" \
        "00000110011\n" \
        "000001101\n" \
        "00000111\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "010\n" \
        "0110\n" \
        "0111000\n" \
        "01110010\n" \
        "011100110\n" \
        "01110011100000\n" \
        "011100111000010\n" \
        "0111001110000110\n" \
        "011100111000011100\n" \
        "011100111000011101000\n" \
        "0111001110000111010010\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.718280),
    .max = OPT_DOUBLE_C(314.159260),
    .precision = OPT_U32_C(5),
    .expectMincoverString = "00000111110110000010011\n" \
        "000001111101100000101\n" \
        "00000111110110000011\n" \
        "000001111101100001\n" \
        "00000111110110001\n" \
        "0000011111011001\n" \
        "000001111101101\n" \
        "00000111110111\n" \
        "00000111111\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "01\n" \
        "1000\n" \
        "1001000000\n" \
        "10010000010\n" \
        "1001000001100\n" \
        "1001000001101000\n" \
        "10010000011010010000\n" \
        "1001000001101001000100\n" \
        "10010000011010010001010\n" \
        "1001000001101001000101100\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.718281),
    .max = OPT_DOUBLE_C(314.159265),
    .precision = OPT_U32_C(6),
    .expectMincoverString = "0000010011100111000101111011\n" \
        "00000100111001110001011111\n" \
        "000001001110011100011\n" \
        "0000010011100111001\n" \
        "000001001110011101\n" \
        "00000100111001111\n" \
        "0000010011101\n" \
        "000001001111\n" \
        "00000101\n" \
        "0000011\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "0100\n" \
        "01010\n" \
        "0101100\n" \
        "0101101000\n" \
        "0101101001000000\n" \
        "01011010010000010\n" \
        "0101101001000001100\n" \
        "010110100100000110100\n" \
        "0101101001000001101010\n" \
        "010110100100000110101100\n" \
        "0101101001000001101011010\n" \
        "01011010010000011010110110\n" 
},
{
    .lowerBound = 13.000000,
    .includeLowerBound = true,
    .upperBound = 192.000000,
    .includeUpperBound = true,
    .sparsity = 1,
    .min = OPT_DOUBLE_C(2.718282),
    .max = OPT_DOUBLE_C(314.159265),
    .precision = OPT_U32_C(7),
    .expectMincoverString = "000001100010000011011101100111\n" \
        "000001100010000011011101101\n" \
        "00000110001000001101110111\n" \
        "00000110001000001101111\n" \
        "0000011000100000111\n" \
        "0000011000100001\n" \
        "000001100010001\n" \
        "00000110001001\n" \
        "0000011000101\n" \
        "000001100011\n" \
        "0000011001\n" \
        "000001101\n" \
        "00000111\n" \
        "00001\n" \
        "0001\n" \
        "001\n" \
        "010\n" \
        "0110\n" \
        "011100000\n" \
        "0111000010\n" \
        "011100001100\n" \
        "011100001101000\n" \
        "01110000110100100000\n" \
        "011100001101001000010\n" \
        "011100001101001000011000\n" \
        "0111000011010010000110010000\n" \
        "01110000110100100001100100010\n" \
        "011100001101001000011001000110\n" \
        "01110000110100100001100100011100\n" 
},
